
# L2G C++

## Introduction

This is a FLT kernel that contains the minimum amount of required functions to
run Field Line-Tracing in a tokamak, using axisymmetric equilibrium data. It is
a small API inside src/* to be used in other codes or applications.

See the src/* directory to view the source code and the tests/* examples/* on
how to use it.

## Building

Use CMake to build it. Embree3 (and OpenMP) is the only dependency that is
required and it is found via CMake find functions. Embree3
(https://github.com/RenderKit/embree) is a high-performance CPU ray tracing
kernel.

Doxygen is optional, but if available, a HTML of the Code API will be
generated.

Linux flavor:
```
mkdir build && cd build
cmake .. -DCMAKE_BUILD_TYPE=Release
make
```

## Debug build CMake for IDE editor

In case you are using an editor with LSP plugins or functionality and you have
installed the LSP-clangd plugin, the following steps has to be performed in
order to have the LSP-clangd enhanced experience.

### Generate the compile build JSON file

When compiling pass the the flag ``-DCMAKE_EXPORT_COMPILE_COMMANDS=ON``. This
will generate a JSON file that gives the LSP information on compilation steps
and flags used.

```
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug /path/to/source
```

### Process the JSON file for LSP-clangd

For this you need to install the ``compdb`` python package

```
pip install compdb
```

When you have the CMake build output file, process it with the ``compdb``
command. The new file has to be positioned in the sources, so that LSP-clangd
registers it.

```
compdb -p /path/to/build/ list > /path/to/source/compile_commands.json
```
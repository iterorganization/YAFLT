#include "stdafx.h"
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <interpolation.h>
#include <bicubic.hpp>
#include <vector>
using namespace alglib;


int main(int argc, char **argv)
{
    // Function exp(-(x-1.5)**2) * exp(-(y-2)**2)

    // Naive implementation
    BICUBIC_INTERP *naive_interp = new BICUBIC_INTERP();
    std::vector<double> naive_x = { 0.0, 0.3333333333333333, 0.6666666666666666, 1.0, 1.3333333333333333, 1.6666666666666665, 2.0, 2.333333333333333, 2.6666666666666665, 3.0, };

    std::vector<double> naive_y = { 0.0, 0.21052631578947367, 0.42105263157894735, 0.631578947368421, 0.8421052631578947, 1.0526315789473684, 1.263157894736842, 1.4736842105263157, 1.6842105263157894, 1.894736842105263, 2.1052631578947367, 2.3157894736842106, 2.526315789473684, 2.7368421052631575, 2.9473684210526314, 3.1578947368421053, 3.3684210526315788, 3.578947368421052, 3.789473684210526, 4.0, };

    std::vector<std::vector<double>> naive_z = { { 0.001930454136227709, 0.004695685779294303, 0.009145947038427872, 0.014264233908999254, 0.017813872384429164, 0.017813872384429164, 0.014264233908999254, 0.009145947038427877, 0.004695685779294308, 0.001930454136227709, }, { 0.00428679433561243, 0.010427307659237892, 0.020309622084447802, 0.0316753638304184, 0.03955774229483481, 0.03955774229483481, 0.0316753638304184, 0.020309622084447813, 0.010427307659237902, 0.00428679433561243, }, { 0.0087118179307529, 0.02119084768787906, 0.041274135400486835, 0.06437211141400312, 0.08039103853462808, 0.08039103853462808, 0.06437211141400312, 0.04127413540048686, 0.021190847687879082, 0.0087118179307529, }, { 0.01620271955147221, 0.039411907465678, 0.07676391379379799, 0.11972280372106862, 0.14951568802076692, 0.14951568802076692, 0.11972280372106862, 0.07676391379379803, 0.039411907465678034, 0.01620271955147221, }, { 0.027578460665544348, 0.06708254971292858, 0.13065896563661364, 0.2037787929798595, 0.2544889151394255, 0.2544889151394255, 0.2037787929798595, 0.1306589656366137, 0.06708254971292864, 0.027578460665544348, }, { 0.04295909370708902, 0.10449479302623271, 0.2035280654901563, 0.3174271533608995, 0.39641854146518285, 0.39641854146518285, 0.3174271533608995, 0.20352806549015642, 0.10449479302623281, 0.04295909370708902, }, { 0.06124112805755908, 0.14896447873646917, 0.29014318614298656, 0.45251413077909997, 0.5651217604307582, 0.5651217604307582, 0.45251413077909997, 0.29014318614298673, 0.1489644787364693, 0.06124112805755908, }, { 0.07989769219858146, 0.19434518024263395, 0.3785327232734849, 0.5903685298304122, 0.7372810707728962, 0.7372810707728962, 0.5903685298304122, 0.37853272327348514, 0.1943451802426341, 0.07989769219858146, }, { 0.09539558392537248, 0.23204264656666754, 0.4519573616943175, 0.7048833212148242, 0.8802927384772827, 0.8802927384772827, 0.7048833212148242, 0.4519573616943177, 0.23204264656666776, 0.09539558392537248, }, { 0.1042378124168358, 0.2535507082219265, 0.49384934553736815, 0.7702190435778097, 0.9618871814557051, 0.9618871814557051, 0.7702190435778097, 0.4938493455373684, 0.2535507082219267, 0.1042378124168358, }, { 0.1042378124168358, 0.2535507082219265, 0.49384934553736815, 0.7702190435778097, 0.9618871814557051, 0.9618871814557051, 0.7702190435778097, 0.4938493455373684, 0.2535507082219267, 0.1042378124168358, }, { 0.09539558392537248, 0.23204264656666754, 0.4519573616943175, 0.7048833212148242, 0.8802927384772827, 0.8802927384772827, 0.7048833212148242, 0.4519573616943177, 0.23204264656666776, 0.09539558392537248, }, { 0.07989769219858146, 0.19434518024263397, 0.378532723273485, 0.5903685298304122, 0.7372810707728963, 0.7372810707728963, 0.5903685298304122, 0.3785327232734852, 0.19434518024263414, 0.07989769219858146, }, { 0.06124112805755912, 0.14896447873646929, 0.29014318614298673, 0.4525141307791002, 0.5651217604307586, 0.5651217604307586, 0.4525141307791002, 0.2901431861429869, 0.1489644787364694, 0.06124112805755912, }, { 0.042959093707089044, 0.10449479302623278, 0.20352806549015642, 0.31742715336089966, 0.39641854146518307, 0.39641854146518307, 0.31742715336089966, 0.20352806549015653, 0.10449479302623287, 0.042959093707089044, }, { 0.027578460665544348, 0.06708254971292858, 0.13065896563661364, 0.2037787929798595, 0.2544889151394255, 0.2544889151394255, 0.2037787929798595, 0.1306589656366137, 0.06708254971292864, 0.027578460665544348, }, { 0.016202719551472216, 0.03941190746567802, 0.07676391379379803, 0.11972280372106868, 0.149515688020767, 0.149515688020767, 0.11972280372106868, 0.07676391379379807, 0.039411907465678055, 0.016202719551472216, }, { 0.008711817930752912, 0.02119084768787909, 0.04127413540048689, 0.06437211141400322, 0.08039103853462819, 0.08039103853462819, 0.06437211141400322, 0.04127413540048692, 0.02119084768787911, 0.008711817930752912, }, { 0.0042867943356124346, 0.010427307659237902, 0.02030962208444782, 0.03167536383041842, 0.039557742294834844, 0.039557742294834844, 0.03167536383041842, 0.02030962208444783, 0.010427307659237911, 0.0042867943356124346, }, { 0.001930454136227709, 0.004695685779294303, 0.009145947038427872, 0.014264233908999254, 0.017813872384429164, 0.017813872384429164, 0.014264233908999254, 0.009145947038427877, 0.004695685779294308, 0.001930454136227709, }, };

    naive_interp->prepareContainers();
    naive_interp->setArrays(naive_x, naive_y, naive_z);

    real_1d_array x = "[0.0, 0.3333333333333333, 0.6666666666666666, 1.0, 1.3333333333333333, 1.6666666666666665, 2.0, 2.333333333333333, 2.6666666666666665, 3.0]";
    real_1d_array y = "[0.0, 0.21052631578947367, 0.42105263157894735, 0.631578947368421, 0.8421052631578947, 1.0526315789473684, 1.263157894736842, 1.4736842105263157, 1.6842105263157894, 1.894736842105263, 2.1052631578947367, 2.3157894736842106, 2.526315789473684, 2.7368421052631575, 2.9473684210526314, 3.1578947368421053, 3.3684210526315788, 3.578947368421052, 3.789473684210526, 4.0]";
    real_1d_array f = "[0.001930454136227709, 0.004695685779294303, 0.009145947038427872, 0.014264233908999254, 0.017813872384429164, 0.017813872384429164, 0.014264233908999254, 0.009145947038427877, 0.004695685779294308, 0.001930454136227709, 0.00428679433561243, 0.010427307659237892, 0.020309622084447802, 0.0316753638304184, 0.03955774229483481, 0.03955774229483481, 0.0316753638304184, 0.020309622084447813, 0.010427307659237902, 0.00428679433561243, 0.0087118179307529, 0.02119084768787906, 0.041274135400486835, 0.06437211141400312, 0.08039103853462808, 0.08039103853462808, 0.06437211141400312, 0.04127413540048686, 0.021190847687879082, 0.0087118179307529, 0.01620271955147221, 0.039411907465678, 0.07676391379379799, 0.11972280372106862, 0.14951568802076692, 0.14951568802076692, 0.11972280372106862, 0.07676391379379803, 0.039411907465678034, 0.01620271955147221, 0.027578460665544348, 0.06708254971292858, 0.13065896563661364, 0.2037787929798595, 0.2544889151394255, 0.2544889151394255, 0.2037787929798595, 0.1306589656366137, 0.06708254971292864, 0.027578460665544348, 0.04295909370708902, 0.10449479302623271, 0.2035280654901563, 0.3174271533608995, 0.39641854146518285, 0.39641854146518285, 0.3174271533608995, 0.20352806549015642, 0.10449479302623281, 0.04295909370708902, 0.06124112805755908, 0.14896447873646917, 0.29014318614298656, 0.45251413077909997, 0.5651217604307582, 0.5651217604307582, 0.45251413077909997, 0.29014318614298673, 0.1489644787364693, 0.06124112805755908, 0.07989769219858146, 0.19434518024263395, 0.3785327232734849, 0.5903685298304122, 0.7372810707728962, 0.7372810707728962, 0.5903685298304122, 0.37853272327348514, 0.1943451802426341, 0.07989769219858146, 0.09539558392537248, 0.23204264656666754, 0.4519573616943175, 0.7048833212148242, 0.8802927384772827, 0.8802927384772827, 0.7048833212148242, 0.4519573616943177, 0.23204264656666776, 0.09539558392537248, 0.1042378124168358, 0.2535507082219265, 0.49384934553736815, 0.7702190435778097, 0.9618871814557051, 0.9618871814557051, 0.7702190435778097, 0.4938493455373684, 0.2535507082219267, 0.1042378124168358, 0.1042378124168358, 0.2535507082219265, 0.49384934553736815, 0.7702190435778097, 0.9618871814557051, 0.9618871814557051, 0.7702190435778097, 0.4938493455373684, 0.2535507082219267, 0.1042378124168358, 0.09539558392537248, 0.23204264656666754, 0.4519573616943175, 0.7048833212148242, 0.8802927384772827, 0.8802927384772827, 0.7048833212148242, 0.4519573616943177, 0.23204264656666776, 0.09539558392537248, 0.07989769219858146, 0.19434518024263397, 0.378532723273485, 0.5903685298304122, 0.7372810707728963, 0.7372810707728963, 0.5903685298304122, 0.3785327232734852, 0.19434518024263414, 0.07989769219858146, 0.06124112805755912, 0.14896447873646929, 0.29014318614298673, 0.4525141307791002, 0.5651217604307586, 0.5651217604307586, 0.4525141307791002, 0.2901431861429869, 0.1489644787364694, 0.06124112805755912, 0.042959093707089044, 0.10449479302623278, 0.20352806549015642, 0.31742715336089966, 0.39641854146518307, 0.39641854146518307, 0.31742715336089966, 0.20352806549015653, 0.10449479302623287, 0.042959093707089044, 0.027578460665544348, 0.06708254971292858, 0.13065896563661364, 0.2037787929798595, 0.2544889151394255, 0.2544889151394255, 0.2037787929798595, 0.1306589656366137, 0.06708254971292864, 0.027578460665544348, 0.016202719551472216, 0.03941190746567802, 0.07676391379379803, 0.11972280372106868, 0.149515688020767, 0.149515688020767, 0.11972280372106868, 0.07676391379379807, 0.039411907465678055, 0.016202719551472216, 0.008711817930752912, 0.02119084768787909, 0.04127413540048689, 0.06437211141400322, 0.08039103853462819, 0.08039103853462819, 0.06437211141400322, 0.04127413540048692, 0.02119084768787911, 0.008711817930752912, 0.0042867943356124346, 0.010427307659237902, 0.02030962208444782, 0.03167536383041842, 0.039557742294834844, 0.039557742294834844, 0.03167536383041842, 0.02030962208444783, 0.010427307659237911, 0.0042867943356124346, 0.001930454136227709, 0.004695685779294303, 0.009145947038427872, 0.014264233908999254, 0.017813872384429164, 0.017813872384429164, 0.014264233908999254, 0.009145947038427877, 0.004695685779294308, 0.001930454136227709]";
    double vx = 1.5;
    double vy = 2.0;
    double v;
    double dx;
    double dy;
    double dxy;
    spline2dinterpolant s;

    // build spline
    spline2dbuildbicubicv(x, naive_x.size(), y, naive_y.size(), f, 1, s);

    // calculate S(0.25,0.50)
    v = spline2dcalc(s, vx, vy);
    printf("%.4f\n", double(v)); // EXPECTED: 1.0625

    // calculate derivatives
    spline2ddiff(s, vx, vy, v, dx, dy, dxy);
    printf("v=%.4f\n", double(v)); // EXPECTED: 1.0625
    printf("dx=%.4f\n", double(dx)); // EXPECTED: 0.5000
    printf("dy=%.4f\n", double(dy)); // EXPECTED: 2.0000
    // Calculate values
    naive_interp->debugGetValues(vx, vy, v, dx, dy, dxy);
    printf("v=%.4f\n", double(v)); // EXPECTED: 1.0625
    printf("dx=%.4f\n", double(dx)); // EXPECTED: 0.5000
    printf("dy=%.4f\n", double(dy)); // EXPECTED: 2.0000
    return 0;
}